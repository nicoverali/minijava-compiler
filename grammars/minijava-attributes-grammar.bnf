<Inicial> ::= <ListaClasesInterfaces>
<ListaClasesInterfaces> ::= <Clase> <OtrasClasesInterfaces>
<ListaClasesInterfaces> ::= <Interfaz> <OtrasClasesInterfaces>
<OtrasClasesInterfaces> ::= <ListaClasesInterfaces> | EOF
<Clase> ::= class idClase {createClass, saveName, setAsCurrent} <GenExplicitaOVacio> {addReturnedGen} <HerenciaClase> { <ListaMiembrosClase> }
<HerenciaClase> ::= <ExtendsOVacio> <ImplementsOVacio>
<ExtendsOVacio> ::= extends idClase {createClass, saveName} <GenExplicitaOVacio> {addReturnedGen, addExtendsToCurrent} | EOF
<ImplementsOVacio> ::= implements idClase {createInteface, saveName} <GenExplicitaOVacio> {addReturnedGen, addImplementsToCurrent} <OtrosImplements> | EOF
<OtrosImplements> ::= , idClase {createInterface, saveName} <GenExplicitaOVacio> {addReturnedGen, addImplementsToCurrent} <OtrosImplements> | EOF
<ListaMiembrosClase> ::= <MiembroClase> <ListaMiembrosClase> | EOF
<Interfaz> ::= interface idClase {createInteface, saveName, setAsCurrent} <GenExplicitaOVacio> {addReturnedGen} <HerenciaInterfaz> { <ListaMiembrosInterfaz> }
<HerenciaInterfaz> ::= extends idClase {createInterface, saveName} <GenExplicitaOVacio> {addReturnedGen, addExtendsToCurrent} <OtrosHerenciaInterfaz> | EOF
<OtrosHerenciaInterfaz> ::= , idClase {createInterface, saveName} <GenExplicitaOVacio> {addReturnedGen, addExtendsToCurrent} <OtrosHerenciaInterfaz> | EOF
<ListaMiembrosInterfaz> ::= <MetodoInterfaz> <ListaMiembrosInterfaz> | EOF
<MetodoInterfaz> ::= <FormaMetodo> {obtainIsStatic} <TipoMetodo> {obtainType} idMetVar {createMethod, setCurrent} <ArgsFormales> {addReturnedArguments} ; {addMethodToCurrent}
<FormaMetodo> ::= static {returnStatic} | dynamic {returnNotStatic}
<TipoMetodo> ::= <Tipo> | void



<MiembroClase> ::= <Visibilidad> {obtainVisibility} <StaticOVacio> {obtainIsStatic} {giveVisAndStat} <Atributo>
<MiembroClase> ::= dynamic {passNotStatic} <Metodo>
<MiembroClase> ::= static {passStatic} <AtributoOMetodo>
<MiembroClase> ::= {assumePublic} idClase {passTypeNameAndPublic} <AtributoOConstructor>
<MiembroClase> ::= {assumePublic} <TipoPrimitivo> {obtainType} {passAllInfo} <ListaDecAtrs> ;
<Visibilidad> ::= public {returnIsPublic} | private {returnIsNotPublic}
<StaticOVacio> ::= static {returnIsStatic} | EOF {returnIsNotStatic}
<AtributoOMetodo> ::= <Tipo> {obtainType} idMetVar {passTypeAndName} <RestoDecAtrsORestoMetodo>
<AtributoOMetodo> ::= void idMetVar {passVoidAndName} <RestoMetodo>
<RestoDecAtrsORestoMetodo> ::= {createAttribute, addToCurrent} {passIsStatic&Type&Name&public} <RestoDecAtrs> | {passTypeAndNameAndStatic} <RestoMetodo>
<RestoDecAtrs> ::= <AsignacionOVacio> {passAllInfo} <OtrosDecAtrs> ;
<RestoMetodo> ::= {createMethodWithInfo} <ArgsFormales> {obtainParameters, setToCurrent} <Bloque>
<Atributo> ::= <Tipo> {obtainType} {passAll} <ListaDecAtrs> ;
<Metodo> ::= {receiveIsStatic} <TipoMetodo> {obtainType} idMetVar {createMethodWithName, setToCurrent} <ArgsFormales> {obtainParameters, addToCurrent} <Bloque>
<AtributoOConstructor> ::= {receiveTypeNameAndPublic} <GenExplicitaOVacio> {obtainGenType} {creteType, passTypeAndInfo} <ListaDecAtrs> ;
<AtributoOConstructor> ::= <Constructor>
<Constructor> ::= <ArgsFormales> {obtainParamaters, createConstructor, addToCurrentClass} <Bloque>
<Tipo> ::= <TipoPrimitivo> {returnType} | <TipoClaseGen> {returnType}
<TipoPrimitivo> ::= boolean | char | int | String
<TipoClaseGen> ::= idClase <GenExplicitaOVacio>


<GenExplicitaOVacio> ::= < idClase > | EOF
<GenericidadOVacio> ::= < <RestoGenericidad> | EOF
<RestoGenericidad> ::= <GenRestoExplicito> | <GenRestoImplicito>
<GenRestoExplicito> ::= idClase >
<GenRestoImplicito> ::= >



<ListaDecAtrs> ::= {receiveVis&Stat&Type} idMetVar {createAttribute, addToCurrent} <AsignacionOVacio> {passAllInfo} <OtrosDecAtrs>
<OtrosDecAtrs> ::= , {passAllInfo} <ListaDecAtrs> | EOF
<ArgsFormales> ::= ( <ListaArgsFormalesOVacio> )
<ListaArgsFormalesOVacio> ::= <ListaArgsFormales> | EOF
<ListaArgsFormales> ::= <ArgFormal> <OtrosArgsFormales>
<OtrosArgsFormales> ::= , <ListaArgsFormales> | EOF
<ArgFormal> ::= <Tipo> {obtainType} idMetVar {saveName, createParameter, returnParameter}
<Bloque> ::= { <ListaSentencias> }
<ListaSentencias> ::= <Sentencia> <ListaSentencias> | EOF
<Sentencia> ::= ;
<Sentencia> ::= <Acceso> <AsignacionOVacio> ;
<Sentencia> ::= <TipoPrimitivo> <ListaDecVars> ;
<Sentencia> ::= idClase <AccesoEstaticoOVarClase>
<Sentencia> ::= if ( <Expresion> ) <Sentencia> <ElseOVacio>
<ElseOVacio> ::= else <Sentencia> | EOF
<Sentencia> ::= while ( <Expresion> ) <Sentencia>
<Sentencia> ::= <Bloque>
<Sentencia> ::= return <ExpresionOVacio> ;
<AccesoEstaticoOVarClase> ::= . <AccesoVarOMetodo> <Encadenado> <AsignacionOVacio> ;
<AccesoEstaticoOVarClase> ::= <GenExplicitaOVacio> <ListaDecVars> ;
<AsignacionOVacio> ::= <TipoDeAsignacion> <Expresion> | EOF
<TipoDeAsignacion> ::= = | += | -=
<ListaDecVars> ::= idMetVar <AsignacionOVacio> <OtrosDecVars>
<OtrosDecVars> ::= , <ListaDecVars> | EOF
<ExpresionOVacio> ::= <Expresion> | EOF
<Expresion> ::= <ExpNivel1>
<ExpresionUnaria> ::= <OperadorUnario> <Operando>
<ExpresionUnaria> ::= <Operando>
<OperadorUnario> ::= + | - | !
<Operando> ::= <Literal>
<Operando> ::= <Acceso>
<Literal> ::= null | true | false | intLiteral | charLiteral | stringLiteral
<Acceso> ::= <Primario> <Encadenado>
<Primario> ::= <AccesoThis>
<Primario> ::= <AccesoVarOMetodo>
<Primario> ::= <AccesoEstatico>
<Primario> ::= <AccesoConstructor>
<Primario> ::= ( <Expresion> )
<AccesoThis> ::= this
<AccesoVar> ::= idMetVar
<AccesoEstatico> ::= static idClase . <AccesoVarOMetodo>
<AccesoConstructor> ::= new idClase <GenericidadOVacio> <ArgsActuales>
<AccesoMetodo> ::= idMetVar <ArgsActuales>
<AccesoVarOMetodo> ::= idMetVar <ArgsActualesOVacio>
<ArgsActualesOVacio> ::= <ArgsActuales> | EOF
<ArgsActuales> ::= ( <ListaExpsOVacio> )
<ListaExpsOVacio> ::= <ListaExps> | EOF
<ListaExps> ::= <Expresion> <OtrosExps>
<OtrosExps> ::= , <ListaExps> | EOF
<Encadenado> ::= <VarOMetodoEncadenado> <Encadenado> | EOF
<VarOMetodoEncadenado> ::= . idMetVar <ArgsActualesOVacio>

<ExpNivel1> ::= <ExpNivel2> <ExpNivel1Resto>
<ExpNivel1Resto> ::= <OpNivel1> <ExpNivel2> <ExpNivel1Resto> | EOF
<OpNivel1> ::= == | !=

<ExpNivel2> ::= <ExpNivel3> <ExpNivel2Resto>
<ExpNivel2Resto> ::= <OpNivel2> <ExpNivel3> <ExpNivel2Resto> | EOF
<OpNivel2> ::= &&

<ExpNivel3> ::= <ExpNivel4> <ExpNivel3Resto>
<ExpNivel3Resto> ::= <OpNivel3> <ExpNivel4> <ExpNivel3Resto> | EOF
<OpNivel3> ::= ||

<ExpNivel4> ::= <ExpNivel5> <ExpNivel4Resto>
<ExpNivel4Resto> ::= <OpNivel4> <ExpNivel5> <ExpNivel4Resto> | EOF
<OpNivel4> ::= < | > | <= | >=

<ExpNivel5> ::= <ExpNivel6> <ExpNivel5Resto>
<ExpNivel5Resto> ::= <OpNivel5> <ExpNivel6> <ExpNivel5Resto> | EOF
<OpNivel5> ::= + | -

<ExpNivel6> ::= <ExpresionUnaria> <ExpNivel6Resto>
<ExpNivel6Resto> ::= <OpNivel6> <ExpresionUnaria> <ExpNivel6Resto> | EOF
<OpNivel6> ::= * | / | %